name: Attach APKs to release

on:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Bump Version
        uses: SoninApps/android_github_actions/.github/actions/bump-version@main
        with:
          version: ${{ github.event.release.tag_name }}  # Use tag name for version

      - name: Generate commands to generate APKs
        run: |
          RELEASE_NAME="${{ github.event.release.name }}"

          # Extract version, product flavours, and build types
          PRODUCT_FLAVORS=$(echo "$RELEASE_NAME" | awk -F' | ' '{print $2}')
          BUILD_TYPES=$(echo "$RELEASE_NAME" | awk -F' | ' '{print $3}')

          echo "Extracted Product Flavours: $PRODUCT_FLAVORS"
          echo "Extracted Build Types: $BUILD_TYPES"

          TASKS=""
          for FLAVOR in $(echo $PRODUCT_FLAVORS | tr ',' ' '); do
            for TYPE in $(echo $BUILD_TYPES | tr ',' ''); do
              TASK_NAME="assemble$(echo $FLAVOR | awk '{print toupper(substr($0,1,1)) tolower(substr($0,2))}')$(echo $TYPE | awk '{print toupper(substr($0,1,1)) tolower(substr($0,2))}')"
              TASKS="$TASKS $TASK_NAME"
            done
          done

          echo "Generated Gradle Tasks: $TASKS"
          echo "TASKS=$TASKS" >> $GITHUB_ENV

      - name: Run Gradle Task
        uses: SoninApps/android_github_actions/.github/actions/run-gradle-task@main
        with:
          task: "${{ env.TASKS }}"

      - name: Find Generated APKs
        id: find-apks
        run: |
          APK_PATHS=$(find app/build/outputs/apk -name "*.apk" | paste -sd "," -)
          echo "APK_PATHS=$APK_PATHS" >> $GITHUB_ENV

      - name: Create release if not exists and upload APKs
        uses: SoninApps/android_github_actions/.github/actions/create-release-if-not-exists@main
        with:
          version: ${{ github.event.release.tag_name }}  # Use tag name for version
          prerelease: ${{ inputs.prerelease }}
          apk_paths: ${{ env.APK_PATHS }}
